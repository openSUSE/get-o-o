site_title: Get openSUSE
site_title_short: Get
site_description: Learn about the openSUSE distributions and download them for free
site_copyright: © 2024 openSUSE contributors
search: Search
translate: Translate
source_code: Source Code
license: License
learn_more: Learn More
cd_desc: For CD and USB stick
dvd_desc: For DVD and USB stick
usb_desc: For USB stick
metalink: Metalink
pick_mirror: Pick Mirror
checksum: Checksum
torrent_file: Torrent File
offline_updated_image: Updated Offline Image
offline_image: Offline Image
iso_image: ISO image
offline_desc: |
  Contains a large collection of software for desktop or server use.
  Suitable for installation or upgrade.
offline_updated_desc: |
  Offline install image with latest updates.
  Suitable for installation or upgrade.
network_image: Network Image
network_desc: |
  Downloads the installation system and all packages from online
  repositories. Suitable for installation or upgrade.
selfinstalling_images: Self Installing Images
selfinstalling_ch_image: Self Installing Container Host
selfinstalling_k3s_image: Self Installing k3s Host
kvm_image: KVM and XEN image
kvm_sdboot_image: KVM image with systemd-boot
kvm_ch_image: KVM and XEN Container Host
kvm_desc: For use in KVM or XEN HVM hypervisors
xen_image: XEN
xen_desc: For use in XEN PV hypervisors
hyperv_image: MS HyperV image
hyperv_ch_image: MS HyperV Container Host
hyperv_desc: For running virtual machines on MS HyperV
vmware_image: VMware image
vmware_ch_image: VMware Container Host
vmware_desc: For running virtual machines in VMware
vmware_vmx_image: VMware VMX
vmware_vmx_ch_image: VMware VMX Container Host
vagrant_image: Vagrant
vagrant_ch_image: Vagrant Container Host
rpi_image: RaspberryPi
rpi_ch_image: RaspberryPi Container Host
pine_image: Pine64
pine_ch_image: Pine64 Container Host
openstack_image: OpenStack-Cloud
openstack_ch_image: OpenStack-Cloud Container Host
openstack_desc: For running virtual machines in OpenStack
virtualbox_image: VirtualBox
installation_images: Installation
ports_images: Ports
ports_info: |
  Ports of openSUSE Leap to architectures other than the PC are
  maintained by separate community teams, with limited resources.
jeos_images: JeOS
jeos_info: Minimal VM images. For Arm JeOS images, please go to the <a href="https://en.opensuse.org/Portal:Arm#Release_supported_platforms">Arm wiki page</a>
minimal_vm_images: Minimal Virtual Machine
minimal_vm_info: Similar to the SUSE Linux Enterprise Server Minimal-VM images. For Arm JeOS images, please go to the <a href="https://en.opensuse.org/Portal:Arm#Release_supported_platforms">Arm wiki page</a>
server_aarch64: UEFI Arm 64-bit servers and boards (aarch64)
server_x86_64: Intel or AMD 64-bit servers (x86_64)
live_images: Live
vm_images: Virtual Machine
cloud_images: Cloud
cloud_image: Cloud image
cloud_minimal_desc: Minimal KVM and Xen image with cloud-init
hardware_images: Hardware
gnome_cd: GNOME LiveCD
kde_cd: KDE LiveCD
xfce_cd: Xfce LiveCD
rescue_cd: Rescue LiveCD
live_info: |
  Please be aware of the following limitations of the live images:
  * They should not be used to install or upgrade. Please use the installation media instead
  * They have a limited package and driver selection, so cannot be considered an accurate reflection as to whether the distribution will work on your hardware or not
  * Kernel and initrd can't be updated, so they shouldn't be used as a persistent installation
microos_desc: openSUSE Tumbleweed based OS providing Transactional (Atomic) Updates
  upon a read-only btrfs root filesystem
choosing_media: Choosing Which Media to Download
choosing_media_p1: |
  The Offline Image is typically recommended as it contains most of the
  packages available in the distribution and does not require a network
  connection during the installation.
choosing_media_micro_p1: |
  The new self-install image is recommended for all who do not require custom partitioning and can boot from USB.
  A simple self-install wizard dumps a preconfigured image to the drive, and grows the partition to the size of the disk.
  <br>
  Users with Raspberry Pi and similar without usb-boot support can directly write the pre-conifgured image to the SD card.
  Users seeking more control over deployment are adviced to use <a href="https://en.opensuse.org/Portal:MicroOS/Combustion">Combustion</a>.
  <br>
  A demo of a combustion based deployment can be seen <a href="https://www.youtube.com/watch?v=ft8UVx9elKc">here</a>.
  <br>
  The jeos-firstboot will greet those who did not configure their system by using Combustion.

choosing_media_p2: |
  The Network Image is recommended for users who have limited
  bandwidth on their internet connections, as it will only download the
  packages they choose to install, which is likely to be significantly
  less than 4.7GB.
choosing_media_micro_p2: |
  The Offline ISO Image should be use by those who require custom partitioning.
documentation: Documentation
documentation_startup_guide: openSUSE Startup Guide
documentation_release_notes: Release Notes
documentation_license: License
documentation_license_link: https://en.opensuse.org/openSUSE:License
documentation_full_documentation: Full Documentation
leap_switch: Easy Ways to Switch to openSUSE Leap
leap_switch_p1: |
  If you’re already running openSUSE you can upgrade by booting from the
  DVD/USB and choosing upgrade, or carry out an ‘Online Upgrade’ in a few
  commands.
leap_switch_instructions: Online Upgrade Instructions.
leap_switch_instructions_link: https://en.opensuse.org/SDB:System_upgrade
requirements: System Requirements
requirements_min: Minimum
requirements_rec: Recommended
requirements_cpu: CPU
requirements_cpu_desc: 2 Ghz dual core processor or better
requirements_mem: Memory
requirements_mem_desc: $value physical RAM + additional memory for your workload
requirements_hdd: Storage
requirements_hdd_desc: Over 40GB of free hard drive space
requirements_hdd_root: / (root) partition
requirements_hdd_var: /var partition
requirements_hdd_size_desc: $value available disk space
requirements_hdd_swap_info: swap space disabled in order for kubernetes to work properly
requirements_hdd_ssd_info: high write speed rate SSD
requirements_dvd_desc: Either a DVD drive or USB port for the installation media
requirements_net: Network
requirements_net_desc: Internet access is helpful, and required for the Network Installer
requirements_net_conn: Full connectivity between all machines in the cluster
requirements_net_mac: Unique hostname and MAC address for every node

tw_switch: Easy Ways to Switch to openSUSE Tumbleweed
tw_switch_p1: |
  If you’re already running openSUSE you can upgrade by booting from the
  DVD/USB and choosing upgrade, or carry out an ‘Online Upgrade’ in a few
  commands.
tw_switch_instructions: Upgrade Instructions.
tw_switch_instructions_link: https://en.opensuse.org/openSUSE:Tumbleweed_upgrade
upgrade_table_linux: From an older version or other Linux distro
upgrade_table_windows: From Windows
upgrade_table_mac: From OS X
upgrade_table_linux_dvd: How to burn a DVD on Linux.
upgrade_table_linux_dvd_link: https://en.opensuse.org/SDB:Download_help#Using_Linux
upgrade_table_windows_dvd: How to burn a DVD on Windows.
upgrade_table_windows_dvd_link: https://en.opensuse.org/SDB:Download_help#Using_Microsoft_Windows
upgrade_table_mac_dvd: How to burn a DVD on OS X.
upgrade_table_mac_dvd_link: https://en.opensuse.org/SDB:Download_help#Using_MacOS_X_.2810.3_and_above.29
upgrade_table_linux_usb: How to create a bootable USB stick on Linux.
upgrade_table_linux_usb_link: https://en.opensuse.org/SDB:Live_USB_stick
upgrade_table_windows_usb: How to create a Bootable USB stick on Windows.
upgrade_table_windows_usb_link: https://en.opensuse.org/SDB:Create_a_Live_USB_stick_using_Windows
upgrade_table__mac_usb: How to create a bootable USB stick on OS X.
upgrade_table__mac_usb_link: https://en.opensuse.org/SDB:Create_a_Live_USB_stick_using_Mac_OS_x
verify_download: Verify Your Download Before Use
verify_download_p1: "Many applications can verify the checksum of a download. To verify\n\
  your download can be important as it verifies you really have got the\nISO file\
  \ you wanted to download and not some broken version.\n"
verify_download_p2: |
  For each ISO, we offer a checksum file with the corresponding SHA256 sum.
verify_download_p3: |
  For extra security, you can use sha256sum to verify who signed those .sha256 files. 
verify_download_pubkey: It should be
verify_download_help: For more help verifying your download please read
verify_download_checksums_help: Checksums Help
verify_download_checksums_help_link: https://en.opensuse.org/SDB:Download_help#Checksums
desktops: Many desktops, three by default
desktops_p1: |
  The openSUSE contribution process empowers desktop development for
  everybody, so you have the choice to pick your favourite one in the
  installer. We actively feature three desktop environments, and offer
  even more in the expanded software view within the installer.
installation: Install it how you want it
installation_p1: "The openSUSE Installation process provides you with all the options\n\
  you would possibly need. Want to install your system with mouse and\nkeyboard? Load\
  \ up the installer in graphical mode. Don't have a mouse\non hand? Enable the terminal\
  \ client and install it that way. Don't have\nphysical access to the machine? Connect\
  \ to the installer remotely and\nget on with the installation. It's that simple.\n"
points_transparent: Everything is transparent
points_transparent_p1: |
  From start to finish, every package which goes into the distributions
  has all of its sources and build scripts openly visible for everyone
  to see. Doubtful of a source? Just check it out on the build service.
points_free: Free software? Your choice
points_free_p1: |
  Packages in the distributions are divided into free and non-free
  repositories. Don't want to use non-free packages? You can easily
  disable the non-free repository. It's your choice, not ours.
points_welcoming: Welcoming contributions
points_welcoming_p1: |
  We try our best to please the community, and we can only make this
  happen when the community is vocal about what they need. That's why we
  ensure contributing is as easy as possible.
preconfigured_image: Preconfigured Image (raw)
preconfigured_qcow_image: Preconfigured Image (qcow)
preconfigured_rt_image: Preconfigured RealTime Image (raw)
selfinstall_image: Self-install Image
selfinstall_rt_image: Self-install RealTime Image
snapper: System got corrupted? Not a problem anymore
snapper_p1: "The Filesystem Snapshots feature keeps your filesystem in check by\n\
  having continuous backups performed automatically when installing\nsoftware and\
  \ updates. Just boot from an earlier snapshot and bring\nyour system to a working\
  \ state in the matter of minutes.\n"
software: Getting software couldn't be easier
software_p1: |
  Between us, having to go through every website to get all the
  software you might need is a lot of work. The online software center
  makes this way easier, by incorporating software from a plethora of
  sources in one place.
software_get: Get Software
transactional: Transactional server
transactional_p1: |
  The installer now supports a new system role Transactional Server,
  which is an outcome of the openSUSE Kubic efforts. This system role
  features a new update system that applies updates atomically (as a
  single operation) and makes them easy to revert should it become
  necessary. These features are based on the package management tools
  that all other SUSE and openSUSE distributions rely on. This means
  that the vast majority of RPM packages that work with other system
  roles of openSUSE distributions also work with the system role
  Transactional Server.
yast: YaST, the best choice for the ~~power~~ user
yast_p1: |
  One of the greatest system configuration tools helps you, the user, to
  setup every single aspect of your system. You no longer need to go
  through a plethora of configuration scripts or enter dubious commands
  to get the system setup as you need it.
yast_firewall: Firewall
yast_fonts: Fonts
yast_hardware: Hardware
yast_partitioner: Partitioner
yast_printer: Printer
yast_scanner: Scanner
yast_sound: Sound
yast_software: Software
zypper: Zypper, your new favourite package manager
zypper_p1: |
  It's quick and easy to learn. Provides zypper-apt, a compatibilty
  layer for usage with apt and apt-get commands. It's based on libsolv,
  which guarantees both speed and reproducable resolving of
  dependencies. The interface is clear and appropriately coloured, for
  ease of reading. It's perfect, what else could be said?
index: openSUSE Distributions
index_p1: For desktop, server, and everything in between
index_desktop: Desktop
index_desktop_p1: Selection of distributions for desktop use
index_server: Server
index_server_p1: Selection of distributions for server use
index_full: Or go straight to the download pages for the distributions
desktop: openSUSE Desktop Distributions
desktop_p1: |
  The two distributions to rule them all (now in green!)
desktop_tumbleweed_p1: For Developers, openSUSE Contributors, Gamers and Linux/FOSS
  Enthusiasts
desktop_tumbleweed_p2: Rolling release with the latest packages provided by the openSUSE
  Project.
desktop_leap_p1: For Sysadmins, Enterprise Developers, and ‘Regular’ Desktop Users
desktop_leap_p2: Regular release with the benefits of both enterprise-grade engineering
  and community-developed innovation.
server: openSUSE Server Distributions
server_p1: |
  Four comfortably boring distributions, how it always should be
server_tumbleweed_p1: For Developers, openSUSE Contributors, Gamers and Linux/FOSS
  Enthusiasts
server_tumbleweed_p2: Rolling release with the latest packages provided by the openSUSE
  Project.
server_leap_p1: For Sysadmins, Enterprise Developers, and ‘Regular’ server Users
server_leap_p2: Regular release with the benefits of both enterprise-grade engineering
  and community-developed innovation.
server_microos_p1: For single purpose server applications
server_microos_p2: Designed to host container workloads with automated administration
  & patching
server_leapmicro_p1: For edge, embedded, IoT and other deployments
server_leapmicro_p2: Ultra-reliable, lightweight operating system built for containerized and virtualized workloads.
new_version_available: $distro_name is now available for download
new_version_testing: $distro_name is now available for download and testing
view_distro: View $distro_name
x86_64: Intel or AMD 64-bit desktops, laptops, and servers (x86_64)
i686: Intel or AMD 32-bit desktops, laptops, and servers (i686)
aarch64: UEFI Arm 64-bit servers, desktops, laptops and boards (aarch64)
armv7l: UEFI Arm 32-bit servers, desktops, laptops and boards (armv7l)
ppc64le: PowerPC servers, little-endian (ppc64le)
ppc64: PowerPC servers, big-endian (ppc64)
s390x: IBM zSystems and LinuxONE (s390x)
overview: Overview
download: Download
alternative_downloads: Alternative Downloads
alternative_downloads_desc: We also have $options images. Check out $alternative_downloads!
MicroOS_features:
  idea:
    name: Philosophy
    description: |
      ### Is predictable
      * Is not altered during runtime
      * Will run the same artifacts consistently on every boot

      ### Is scalable
      * Eliminates efforts in configuring individual instances during runtime
      * Can be rolled out easily repeatedly with predictable outcome

      ### Is reliable
      * Automated recovery from faulty updates
  update:
    name: Atomic Updates
    description: |
      ###  Transactional Updates

      #### Unique
      By using btrfs with snapshots MicroOS uses a very space
      efficient way to store the file system's history. All the configuration
      files in `/etc` are part of the snapshot and the rollback.

      #### Flexible
      * No new package format is needed, use standard openSUSE RPMs
      * No size limitation, neither for partitions nor the operating system
      * Easy to enhance
  shield:
    name: Rollback
    description: |
      ### MicroOS is an Immutable OS, rollback is simple
      * Immutable: No changes on disk
      * Rollback by rebooting to an old BTRFS snapshot
  key:
    name: Secure Updates
    description: |
      * Get your updates via HTTPS
      * Packages and repositories are signed by our build system
      * Packages are verified
      * No updates are done in case of dependency conflicts
      * No waste of space: Filesystem snapshots get deleted in case of unsuccessful updates
  work:
    name: Workloads
    description: |
      Applications are installed in containers rather than the root filesystem:
      * Isolated from the core filesystem
      * Reduced ability for malicious applications to compromise the system
      * New installation without reboot
      * Update in atomic way possible (create new, kill old)
      * Easy rollback
  tool:
    name: Debugging
    description: |
      ### Debugging Toolbox Container
      * Launches privileged container
      * Root filesystem available below `/media/root`
      * zypper to install the necessary tools, available without reboot
      * Persistent between usages
Kubic_features:
Leap_features:
Tumbleweed_features:
  update:
    name: Continuously Updated
    description: |
      You install it once and enjoy it forever. No longer do you have to worry every six months about massive system upgrades that risk bricking your system.
  knife:
    name: Leading-Edge
    description: |
      You get frequent updates that not only address vulnerabilities or squash bugs, but reflect latest features and developments, such as fresh kernels, fresh drivers and recent desktop environment versions.
  home:
    name: Stable
    description: |
      Updates are thoroughly tested against industry-grade quality standards, taking advantage of a build service other Linux distributions envy us. Not only is each new version of a package individually tested, but different clusters of versions are tested against each other, making sure your system is internally consistent.
  user:
    name: Simple to Use
    description: |
      With a single command you can update thousands of packages, rollback to last week's snapshot, fast-forward again, and even preview upcoming releases.
  cpu:
    name: Plays Nice with Your Hardware
    description: |
      Thanks to its leading-edge and thoroughly tested nature, Tumbleweed serves your hardware and devices like few other Linux distributions, making it a superb installment for workstations, laptops and notebooks alike.
  key:
    name: Safe
    description: |
      Should anything unwanted occur you can always rollback to a previous state and find your files and programs just as they were before a bumpy update.
  shield:
    name: Secure
    description: |
      Built from latest kernel releases, compiled with the latest Spectre / Meltdown mitigation patches, with firewall and strong security policies turned on by default, your security is covered out-of-the-box.
  power:
    name: Powerful
    description: |
      Harnessing technologies openSUSE is renowned for, such as the `Btrfs` file-system, the `snapper` command-line utility as well as the battle-proven `YaST` "control panel", Tumbleweed empowers you with full control over your system, letting you define the settings you want and be done with it. No longer do you have to worry about a system interfering with your workflow.
  plant:
    name: Stands on Firm Ground
    description: |
      Tumbleweed builds on decades of usage, testing and debugging by hundreds of power-users, developers, system administrators and demanding doers that cannot afford to jeopardize their workflow. Tumbleweed's solidity is embodied in many core packages whose DNA stems from the venerable SUSE Linux Enterprise Server.
  gamepad:
    name: Gaming
    description: |
     Tumbleweed provides users with the latest gaming-related software. With the Linux support for gaming improving rapidly, that's an important aspect for smooth, performant and problem free experience in your favorite games.
leap_ovw_title: A brand new way of building openSUSE and a new type of a hybrid Linux distribution
leap_ovw_desc: Leap uses source from SUSE Linux Enterprise (SLE), which gives Leap a level of stability unmatched by other Linux distributions, and combines that with community developments to give users, developers and sysadmins the best stable Linux experience available.
tumbleweed_ovw_title: State-of-the-art desktop and server operating system
tumbleweed_ovw_desc: With Tumbleweed you don't have to take difficult decisions about things you value, either freedom or safety, either control or security, technology or stability -- Tumbleweed lets you have your cake and eat it too!
leap_micro_ovw_title: Leap Micro is an ultra-reliable, lightweight operating system built for containerized and virtualized workloads.
leap_micro_ovw_desc_p1: This community version is based on SUSE Linux Enterprise Micro, which leverages the enterprise hardened security and compliance components of SUSE Linux Enterprise. This merging of technologies provides for a modern, immutable and developer-friendly OS platform.
leap_micro_ovw_desc_p2: Leap Micro offers an offline image. The main difference between the offline and self-install/raw images are that the offline image has an installer. Raw and self-install allows for customization via combustion or manually in the image after it is written to the disk. There is an option for a real-time kernel.
leap_micro_ovw_desc_p3: Try Leap Micro in VMs running on either <a href="https://www.suse.com/c/happened-kernel-xen/">Xen</a> or KVM. Using a Raspberry Pi or other System on Chip hardware may use the preconfigured image together with the <a href="https://en.opensuse.org/Portal:MicroOS/Combustion">Combustion</a> functionality for the boot process. Both preconfigured and self-installed images are intended to be used with  <a href="https://en.opensuse.org/Portal:MicroOS/Combustion">Combustion</a>  written to a USB, which is driven to allow configuration on any first boot, with the option for default password protected changes.
leap_micro_ovw_video_desc: A Short Leap Micro installation demo with combustion and cockpit.
microos_ovw_title: Micro Service OS providing Transactional (Atomic) Updates upon a read-only btrfs root filesystem
microos_ovw_desc_p1: Designed to host container workloads with automated administration & patching. Installing openSUSE MicroOS you get a quick, small environment for deploying Containers, or any other workload that benefits from Transactional Updates. As rolling release distribution the software is always up-to-date.
microos_ovw_desc_p2: MicroOS offers an offline image. The main difference between the offline and self-install/raw images are that the offline image has an installer. Raw and self-install allows for customization via combustion or manually in the image after it is written to the disk. There is an option for a real-time kernel.
microos_ovw_desc_p3: Try MicroOS in VMs running on either <a href="https://www.suse.com/c/happened-kernel-xen/">Xen</a> or KVM. Using a Raspberry Pi or other System on Chip hardware may use the preconfigured image together with the <a href="https://en.opensuse.org/Portal:MicroOS/Combustion">Combustion</a> functionality for the boot process. Both preconfigured and self-installed images are intended to be used with  <a href="https://en.opensuse.org/Portal:MicroOS/Combustion">Combustion</a>  written to a USB, which is driven to allow configuration on any first boot, with the option for default password protected changes.
